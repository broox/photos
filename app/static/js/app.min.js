function getBrowserWidth(){return Math.max(document.body.scrollWidth,document.documentElement.scrollWidth,document.body.offsetWidth,document.documentElement.offsetWidth,document.documentElement.clientWidth)}function getBrowserHeight(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.documentElement.clientHeight)}function isLargeViewport(){return getBrowserWidth()>500}function serializeForPhotoSwipe(e){const t=isLargeViewport()?e.images.medium:e.images.small;let o=e.images.medium;return e.images.large&&(o=e.images.large),{id:e.id,src:o,w:e.width,h:e.height,msrc:e.images.medium,title:e.description,thumbnail:t}}const photosMixin={data:{photos:[],offset:0,limit:20,photoRowHeight:200},created(){isLargeViewport()&&(this.limit=40,this.photoRowHeight=300)},methods:{getRecentPhotos(e,t){return this.message="Loading...",t=t||this.limit,fetch("/api/v1/photos?limit="+t+"&offset="+e).then(e=>e.json()).then(e=>{const t=e.data;this.addPhotosToGallery(t),this.message=null}).catch(e=>{this.message="Error loading photos",console.error("Error fetching photos")})},getMorePhotos(){this.offset=this.offset+this.limit,this.getRecentPhotos(this.offset,this.limit).then(()=>{this.renderGallery(),this.setupSlideShow()})},renderGallery(){new flexImages({selector:".flex-images",rowHeight:this.photoRowHeight}),window.addEventListener("scroll",this.infiniteScroll)},addPhotosToGallery(e){var t=e.map(serializeForPhotoSwipe);this.photos.push(...t)},setupSlideShow(){const e=document.querySelectorAll(".item");for(let t=e.length;t--;)e[t].onclick=this.openSlideShow},openSlideShow(e){e.preventDefault();const t=document.querySelectorAll(".pswp")[0],o={index:parseInt(e.currentTarget.dataset.index,10),getThumbBoundsFn:function(e){var t=document.querySelectorAll(".item img")[e],o=window.pageYOffset||document.documentElement.scrollTop,i=t.getBoundingClientRect();return{x:i.left,y:i.top+o,w:i.width}}};isNaN(o.index)||(console.log("open photo "+o.index+" of "+this.photos.length),new PhotoSwipe(t,PhotoSwipeUI_Default,this.photos,o).init())},infiniteScroll(){const e=document.documentElement.offsetHeight;document.documentElement.scrollTop+window.innerHeight+10*this.photoRowHeight>=e&&(this.getMorePhotos(),window.removeEventListener("scroll",this.infiniteScroll))}}},app=new Vue({el:"#app",data:{message:null},mixins:[photosMixin],beforeMount(){this.getRecentPhotos().then(()=>{this.renderGallery(),this.setupSlideShow()})}});