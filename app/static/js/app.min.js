function buildQueryString(t){const e=encodeURIComponent;return Object.keys(t).map(s=>e(s)+"="+e(t[s])).join("&")}function getBrowserWidth(){return Math.max(document.body.scrollWidth,document.documentElement.scrollWidth,document.body.offsetWidth,document.documentElement.offsetWidth,document.documentElement.clientWidth)}function getBrowserHeight(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.documentElement.clientHeight)}function isLargeViewport(){return getBrowserWidth()>500}function pluralize(t,e){return 1!==t&&(e+="s"),t.toLocaleString()+" "+e}function relativeTime(t){const e=new Date-t;if(e<6e4){return pluralize(Math.round(e/1e3),"second")+" ago"}if(e<36e5){return pluralize(Math.round(e/6e4),"minute")+" ago"}if(e<864e5){return pluralize(Math.round(e/36e5),"hour")+" ago"}if(e<2592e6){return pluralize(Math.round(e/864e5),"day")+" ago"}if(e<31536e6){return pluralize(Math.round(e/2592e6),"month")+" ago"}return pluralize(Math.round(e/31536e6),"year")+" ago"}const Album={fetchIndex(t){const e=Object.assign({limit:40,offset:0},t);return fetch("/api/v1/albums?"+buildQueryString(e)).then(t=>t.json())}},Photo={fetchIndex(t){const e=Object.assign({limit:40,offset:0},t);return fetch("/api/v1/photos?"+buildQueryString(e)).then(t=>t.json())}},Tag={fetchIndex(t){const e=Object.assign({limit:40,offset:0},t);return fetch("/api/v1/tags?"+buildQueryString(e)).then(t=>t.json())}},GlobalStore={album:null,page:null,query:null,tag:null,title:null};function serializeAlbum(t){return t.url=`/${t.slug}`,t.thumbnail=`https://derek.broox.com/square/${t.slug}/${t.thumbnail_id}/${t.slug}.jpg`,t.time=t.created_at?relativeTime(Date.parse(t.created_at)):null,t}function serializeForPhotoSwipe(t){const e=isLargeViewport()?t.images.medium:t.images.small;let s=t.images.medium;t.images.large&&(s=t.images.large);const o=t.tags;let a="";if(o)for(let t=0;t<o.length;t++)a+=' <a href="/tagged/'+o[t].slug+'">#'+o[t].name.replace(/\s/g,"")+"</a>";const i=t.taken_at||t.created_at;let l=null;return i&&(l=relativeTime(Date.parse(i))),{id:t.id,src:s,w:t.width,h:t.height,date:l,msrc:e,title:t.description,tags:a,thumbnail:e}}Vue.component("AlbumList",{props:["search"],data:()=>({albumCount:0,albums:[]}),computed:{albumCountDisplay(){const t=this.albumCount;if(t)return pluralize(t,"album")}},watch:{search(t){this.$refs.albums.scrollLeft=0,t||(this.albumCount=0,this.albums=[]);const e=t,s={limit:40,search:t};return Album.fetchIndex(s).then(s=>{e===t&&(this.albumCount=s.meta.count,this.albums=s.data.map(serializeAlbum),console.log(this.albumCount),console.log(this.albums))}).catch(t=>{console.error("Error fetching albums",t)})}},methods:{selectAlbum(t){this.$emit("album",t)}}});const Gallery=Vue.component("Gallery",{template:'\n    <div>\n      <div class="pageText" v-show="pageText" v-html="pageText"></div>\n      <p class="photoCount" v-show="totalPhotoCount">{{photoCountDisplay}}</p>\n      <div class="flex-images">\n        <div v-for="(photo, index) in photos" class="item" :id="photo.id" :data-w="photo.w" :data-h="photo.h" :data-index="index">\n          <img :src="photo.thumbnail" :alt="photo.title"/>\n        </div>\n      </div>\n      <div class="loading" v-show="loading"><i class="fa fa-spin fa-spinner"></i></div>\n    </div>\n  ',data:()=>({cachedPhotos:[],cachedPhotoAmount:0,limit:40,loading:!1,offset:0,pageText:null,photoRowHeight:200,showModal:!1,totalPhotoCount:0}),created(){isLargeViewport()&&(this.photoRowHeight=300)},computed:{photoCountDisplay(){const t=this.totalPhotoCount;if(t)return pluralize(t,"photo")},album(){return this.$store.state.album},page(){return this.$store.state.page},photos(){return this.$store.state.photos},query(){return this.$store.state.query},tag(){return this.$store.state.tag}},watch:{album:function(t){null!=t&&(this.resetPage(),t.description&&(this.pageText=t.description),this.loadPhotos())},page:function(t){t==pages.HOME&&(this.resetPage(),this.loadPhotos())},tag:function(t){null!=t&&(this.resetPage(),this.loadPhotos())},query:function(t){null!=t&&(this.resetPage(),this.loadPhotos())}},methods:{addPhotosToGallery(t){const e=t.map(serializeForPhotoSwipe);this.$store.dispatch("pushPhotos",e)},fetchPhotos(){this.loading=!0;const t={limit:this.limit,offset:this.offset},e={};return this.album&&(e.album_id=this.album.id),this.query&&(e.search=this.query),this.tag&&(e.tag=this.tag.slug),Photo.fetchIndex(Object.assign(t,e)).then(t=>{const e=t.data;this.totalPhotoCount=t.meta.count,this.addPhotosToGallery(e),this.loading=!1}).catch(t=>{this.loading=!1,console.error("Error fetching photos.",t)})},loadPhotos(){return this.fetchPhotos().then(()=>{this.renderGallery(),this.setupSlideShow()})},loadMorePhotos(){if(this.offset=this.offset+this.limit,!(this.offset>=this.totalPhotoCount))return this.loadPhotos()},renderGallery(){new flexImages({selector:".flex-images",rowHeight:this.photoRowHeight}),this.offset<this.totalPhotoCount&&window.addEventListener("scroll",this.infiniteScroll)},resetPage(){this.pageText=null,this.$store.dispatch("setPhotos",[]),this.offset=0,this.totalPhotoCount=0,window.scrollTo(0,0)},setupSlideShow(){const t=document.querySelectorAll(".item");for(let e=t.length;e--;)t[e].onclick=this.openSlideShow},toggleModal(t){this.showModal=t},openSlideShow(t){t.preventDefault();const e=document.querySelectorAll(".pswp")[0],s={index:parseInt(t.currentTarget.dataset.index,10),getThumbBoundsFn:function(t){var e=document.querySelectorAll(".item img")[t],s=window.pageYOffset||document.documentElement.scrollTop,o=e.getBoundingClientRect();return{x:o.left,y:o.top+s,w:o.width}},fullscreenEl:!1,shareEl:!1,shareButtons:[{id:"download",label:"Download image",url:"{{raw_image_url}}",download:!0}]};isNaN(s.index)||new PhotoSwipe(e,PhotoSwipeUI_Default,this.photos,s).init()},infiniteScroll(){const t=document.documentElement.offsetHeight;document.documentElement.scrollTop+window.innerHeight+10*this.photoRowHeight>=t&&(this.loadMorePhotos(),window.removeEventListener("scroll",this.infiniteScroll))}}}),ALBUM="album",TAG="tag",HeaderSearch=Vue.component("HeaderSearch",{template:'\n    <form class="wrap" v-on:submit.prevent="searchPhotos">\n      <div class="search">\n        <input type="text" class="searchInput" placeholder="Search Broox Photos" autocorrect="off" autocapitalize="off" v-model="input" v-on:input="realtimeSearch" v-on:paste="realtimeSearch" v-on:blur="syncSearchForm">\n        <button type="submit" class="searchButton" v-show="!query">\n          <i class="fas fa-search"></i>\n        </button>\n        <button type="button" class="clearSearch" v-show="query" v-on:click="clearSearchForm">\n          <i class="fas fa-times"></i>\n        </button>\n      </div>\n      <div class="realtimeSearchResults" v-show="showRealtimeSearchResults" v-cloak>\n        <ul>\n          <li v-for="result in realtimeResults" v-on:click="selectRealtimeSearch(result)" :class="result.type">\n            <i class="fas fa-tag" v-if="result.type == \'tag\'"></i>\n            <i class="fas fa-images"v-if="result.type == \'album\'"></i>\n            {{ result.display }}\n          </li>\n        </ul>\n      </div>\n    </form>\n  ',props:["modal"],data:()=>({albums:[],dropRealtimeResults:!1,input:null,lastQuery:null,query:null,tags:[]}),computed:{globalQuery(){return this.$store.state.query},showRealtimeSearchResults(){return this.albums.length>0},realtimeResults(){const t=this.albums.map(t=>({type:ALBUM,display:t.title,album:t}));let e=this.tags.map(t=>({type:TAG,display:t.name,tag:t}));if(this.albumCount+this.tagCount>10&&this.tagCount>5){let t;t=this.tagCount>5&&this.albumCount>5?5:10-this.albumCount,e=e.slice(0,t)}const s=e.concat(t).slice(0,10),o=s.filter(t=>t.type===ALBUM),a=s.filter(t=>t.type===TAG),i=[];if(this.tagCount>a.length){const t=this.tagCount-a.length;i.push(pluralize(t,"more tag"))}if(this.albumCount>o.length){const t=this.albumCount-o.length;i.push(pluralize(t,"more album"))}return i&&s.push({type:"summary",display:i.join(" and ")}),s}},created(){document.onkeydown=t=>{"Escape"===t.key&&this.clearRealtimeSearchResults()}},watch:{globalQuery:function(t){t!==this.query&&(this.query=t,this.syncSearchForm())},modal(t){t||this.clearRealtimeSearchResults()},input(t){this.dropRealtimeResults=!1}},methods:{clearRealtimeSearchResults(t){this.albums=[],this.tags=[]},clearSearch(){this.query=null},clearSearchForm(){this.input=null,this.clearRealtimeSearchResults(),this.clearSearch(),this.$root.showRecent()},realtimeSearch(t){this.lastQuery!=this.input&&(this.input.length>2&&"Enter"!==t.key?(this.searchTags(this.input),this.searchAlbums(this.input),this.lastQuery=this.input):(this.clearRealtimeSearchResults(),this.lastQuery=null))},searchAlbums(t){const e={limit:10,search:t},s=t;return Album.fetchIndex(e).then(e=>{this.dropRealtimeResults||s!==t||(this.albums=e.data,this.albumCount=e.meta.count)}).catch(t=>{console.error("Error fetching albums",t)})},searchPhotos(){this.clearRealtimeSearchResults(),this.query=this.input,this.dropRealtimeResults=!0,this.$root.search(this.query)},searchTags(t){const e={limit:10,search:t},s=t;return Tag.fetchIndex(e).then(e=>{this.dropRealtimeResults||s!==t||(this.tags=e.data,this.tagCount=e.meta.count)}).catch(t=>{console.error("Error fetching tags",t)})},selectRealtimeSearch(t){t.type===ALBUM?this.$root.selectAlbum(t.album):t.type===TAG&&this.$root.selectTag(t.tag)},syncSearchForm(){this.query&&this.input!==this.query&&(this.input=this.query)}}}),HeaderTitle=Vue.component("HeaderTitle",{template:'\n    <div class="galleryTitle">\n      <i class="fas fa-chevron-left back" v-on:click="goBack"></i>\n      <h1>{{ title }}</h1>\n    </div>\n  ',computed:{title(){return this.$store.state.title}},methods:{goBack(){this.$root.showRecent()}}}),pages={HOME:"home",ALBUM:"album",SEARCH:"search",TAG:"tag"},routes=[{path:"/",name:pages.HOME,components:{header:HeaderSearch,content:Gallery}},{path:"/search/:query",name:pages.SEARCH,components:{header:HeaderSearch,content:Gallery}},{path:"/tagged/:tag",name:pages.TAG,components:{header:HeaderTitle,content:Gallery}},{path:"/:album",name:pages.ALBUM,components:{header:HeaderTitle,content:Gallery}}];Vue.use(Vuex);const store=new Vuex.Store({state:{album:null,page:null,photos:[],query:null,tag:null,title:null},mutations:{clearFilters(t){t.album=null,t.query=null,t.tag=null},pushPhotos(t,e){t.photos.push(...e)},setAlbum(t,e){t.album=e},setPage(t,{title:e,page:s}){t.title=e,t.page=s},setPhotos(t,e){t.photos=e},setQuery(t,e){t.query=e},setTag(t,e){t.tag=e}},actions:{pushPhotos({commit:t},e){t("pushPhotos",e)},search({commit:t},e){t("setQuery",e)},selectAlbum({commit:t},e){t("setAlbum",e)},selectFeed({commit:t}){t("clearFilters")},selectPage({commit:t},{title:e,page:s}){t("setPage",{title:e,page:s})},setPhotos({commit:t},e){t("setPhotos",e)},selectTag({commit:t},e){t("setTag",e)}}}),router=new VueRouter({mode:"history",routes:routes}),app=new Vue({router:router,store:store,methods:{go(t,e){document.title=t,this.$store.dispatch("selectPage",{title:t,page:e.name}),this.$router.push(e).catch(t=>{})},search(t){this.$store.dispatch("search",t),this.go(t,{name:pages.SEARCH,params:{query:t}})},selectAlbum(t){this.$store.dispatch("selectAlbum",t),this.go(t.title,{name:pages.ALBUM,params:{album:t.slug}})},selectTag(t){this.$store.dispatch("selectTag",t);const e=`#${t.name.replace(/\s/g,"")}`;this.go(e,{name:pages.TAG,params:{tag:t.slug}})},showRecent(){this.$store.dispatch("selectFeed"),this.go("Broox Photos",{name:pages.HOME})}}}).$mount("#app"),header=document.getElementById("pageHeader"),sticky=header.offsetTop;window.onscroll=()=>{window.pageYOffset>sticky?header.classList.add("sticky"):header.classList.remove("sticky")};